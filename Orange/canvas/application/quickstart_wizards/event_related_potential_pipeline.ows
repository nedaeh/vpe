<?xml version='1.0' encoding='utf-8'?>
<scheme description="The event related potential (ERP) is the change in the brain activity in response to a stimulus or an event. The Event-related potential pipeline provides the signal processing and machine learning tools required to detect and classify the ERP responses in the EEG signal. This information can then be used to evaluate the brain functionality in response to an event.  For example, it can be used to predict whether a user has committed an error in performing certain task at a given point in time.&#10;&#10;In general, the pipeline can process the data both offline (batch mode) or on the fly (streaming data). The pipeline needs to be trained/calibrated before making predictions, where the training can be done on a portion of data where target values are known or can be performed on  a separate data set. The training can be skipped if a pretrained model exists and can be loaded into the pipeline.&#10;&#10;In this implementation, the input data stream is read from network in Lab Streaming layer (LSL) format, this can be EEG signal of any number of channels and any sampling rate. The outcome is also transmitted as LSL stream where the output stream contains one channel per target class which indicates the probability of that class at the given moment.&#10;&#10;As mentioned this pipeline requires calibration data, i.e., EEG data during which different target conditions occur multiple times, ideally in a randomly alternating manner. The beginning of each condition must be indicated by a marker in a separate marker stream. For example, for an oddball this can indicate correct and incorrect decisions, as marked by event labels ”correct&quot; and &quot;incorrect&quot;. Also, the entire calibration section must be preceded by a begin marker (default: &quot;calib-begin&quot;) and followed by an end marker (default: &quot;calib-end&quot;). The number of repetitions for each class should be at least 20 and ideally as much as 80. &#10;&#10;The quickstart wizard window can be used to perform following actions:&#10;&#10;- Enter the LSL stream name to be used as input data stream&#10;&#10;- Enter the name for the output stream&#10;&#10;- Enter the marker labels for events that shell be used for classification&#10;&#10;- Enter the list of channels to be retained for process in the pipeline. If the data stream includes known flat-line channels, &#10;trigger channels, accelerometer channels,  etc, this parameter can be used to exclude them from being included in the pipeline processing.&#10;&#10;- Enter the time segment to be used to extract the data for the pipeline analysis, in seconds. This segmentation can be either relative to event markers or as a single window at the end of current data chunk." title="Classifying Event-Related potential (ERP)" version="2.0">
	<nodes>
		<node id="0" name="Segmentation" position="(440.0, 341.0)" project_name="Orange" qualified_name="Orange.widgets.formatting.owsegmentation.OWSegmentation" title="Segmentation" version="" />
		<node id="1" name="Assign Targets" position="(628.0, 112.0)" project_name="Orange" qualified_name="Orange.widgets.utilities.owassigntargets.OWAssignTargets" title="Assign Targets" version="" />
		<node id="2" name="Measure Loss" position="(841.0, 380.0)" project_name="Orange" qualified_name="Orange.widgets.machine_learning.owmeasureloss.OWMeasureLoss" title="Measure Loss" version="" />
		<node id="3" name="Dejitter Timestamps" position="(329.0, 112.0)" project_name="Orange" qualified_name="Orange.widgets.utilities.owdejittertimestamps.OWDejitterTimestamps" title="Dejitter Timestamps" version="" />
		<node id="4" name="Select Range" position="(833.0, 114.0)" project_name="Orange" qualified_name="Orange.widgets.general.owselectrange.OWSelectRange" title="Select Range" version="" />
		<node id="5" name="FIR Filter" position="(196.0, 343.0)" project_name="Orange" qualified_name="Orange.widgets.filters.owfirfilter.OWFIRFilter" title="FIR Filter" version="" />
		<node id="6" name="Decimate" position="(314.0, 342.0)" project_name="Orange" qualified_name="Orange.widgets.filters.owdecimate.OWDecimate" title="Decimate" version="" />
		<node id="7" name="Spectral Selection" position="(559.0, 341.0)" project_name="Orange" qualified_name="Orange.widgets.spectral.owspectralselection.OWSpectralSelection" title="Spectral Selection" version="" />
		<node id="8" name="Hierarchical Discriminant Component Analysis" position="(670.0, 340.0)" project_name="Orange" qualified_name="Orange.widgets.machine_learning.owhierarchicaldiscriminantcomponentanalysis.OWHierarchicalDiscriminantComponentAnalysis" title="Hierarchical Discriminant Component Analysis" version="" />
		<node id="9" name="LSL Output" position="(844.0, 273.0)" project_name="Orange" qualified_name="Orange.widgets.network.owlsloutput.OWLSLOutput" title="LSL Output" version="" />
		<node id="10" name="Accumulate Calibration Data" position="(468.0, 113.0)" project_name="Orange" qualified_name="Orange.widgets.utilities.owaccumulatecalibrationdata.OWAccumulateCalibrationData" title="Accumulate Calibration Data" version="" />
		<node id="11" name="PrintToConsole" position="(846.0, 492.0)" project_name="Orange" qualified_name="Orange.widgets.utilities.owprinttoconsole.OWPrintToConsole" title="PrintToConsole" version="" />
		<node id="12" name="LSL Input" position="(142.0, 111.0)" project_name="Orange" qualified_name="Orange.widgets.network.owlslinput.OWLSLInput" title="LSL Input" version="" />
	</nodes>
	<links>
		<link enabled="true" id="0" sink_channel="Data" sink_node_id="4" source_channel="Data" source_node_id="1" />
		<link enabled="true" id="1" sink_channel="Data" sink_node_id="6" source_channel="Data" source_node_id="5" />
		<link enabled="true" id="2" sink_channel="Data" sink_node_id="7" source_channel="Data" source_node_id="0" />
		<link enabled="true" id="3" sink_channel="Data" sink_node_id="8" source_channel="Data" source_node_id="7" />
		<link enabled="true" id="4" sink_channel="Data" sink_node_id="2" source_channel="Data" source_node_id="8" />
		<link enabled="true" id="5" sink_channel="Data" sink_node_id="0" source_channel="Data" source_node_id="6" />
		<link enabled="true" id="6" sink_channel="Data" sink_node_id="5" source_channel="Data" source_node_id="4" />
		<link enabled="true" id="7" sink_channel="Data" sink_node_id="9" source_channel="Data" source_node_id="8" />
		<link enabled="true" id="8" sink_channel="Data" sink_node_id="10" source_channel="Data" source_node_id="3" />
		<link enabled="true" id="9" sink_channel="Data" sink_node_id="1" source_channel="Data" source_node_id="10" />
		<link enabled="true" id="10" sink_channel="Data" sink_node_id="11" source_channel="Data" source_node_id="8" />
		<link enabled="true" id="11" sink_channel="Data" sink_node_id="3" source_channel="Data" source_node_id="12" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties format="pickle" node_id="0">gAN9cQAoWA8AAABvbmxpbmVfZXBvY2hpbmdxAVgHAAAAc2xpZGluZ3ECWAwAAABvbmx5X3NpZ25h
bHNxA4lYCwAAAHRpbWVfYm91bmRzcQRHv8mZmZmZmZpHP+mZmZmZmZqGcQVYEwAAAHNhdmVkV2lk
Z2V0R2VvbWV0cnlxBmNzaXAKX3VucGlja2xlX3R5cGUKcQdYDAAAAFB5UXQ0LlF0Q29yZXEIWAoA
AABRQnl0ZUFycmF5cQlDLgHZ0MsAAQAAAAABdgAAAKEAAAOJAAACeAAAAXYAAAC3AAADiQAAAngA
AAAAAABxCoVxC4dxDFJxDVgNAAAAc2FtcGxlX29mZnNldHEOSwB1Lg==
</properties>
		<properties format="pickle" node_id="1">gAN9cQAoWAcAAABtYXBwaW5ncQF9cQIoWAkAAABpbmNvcnJlY3RxA0sBWAcAAABjb3JyZWN0cQRL
AHVYEwAAAHNhdmVkV2lkZ2V0R2VvbWV0cnlxBWNzaXAKX3VucGlja2xlX3R5cGUKcQZYDAAAAFB5
UXQ0LlF0Q29yZXEHWAoAAABRQnl0ZUFycmF5cQhDLgHZ0MsAAQAAAAAAAAAAABcAAAT/AAADGwAA
AAAAAAAtAAAE/wAAAxsAAAAAAABxCYVxCodxC1JxDHUu
</properties>
		<properties format="pickle" node_id="2">gAN9cQAoWAsAAABsb3NzX21ldHJpY3EBWAMAAABNQ1JxAlgTAAAAc2F2ZWRXaWRnZXRHZW9tZXRy
eXEDY3NpcApfdW5waWNrbGVfdHlwZQpxBFgMAAAAUHlRdDQuUXRDb3JlcQVYCgAAAFFCeXRlQXJy
YXlxBkMuAdnQywABAAAAAAMCAAABygAABGkAAAJVAAADAgAAAeAAAARpAAACVQAAAAAAAHEHhXEI
h3EJUnEKWBIAAABhY2N1bXVsYXRlX29mZmxpbmVxC4l1Lg==
</properties>
		<properties format="pickle" node_id="3">gAN9cQAoWA4AAABtYXhfdXBkYXRlcmF0ZXEBTfQBWA8AAABmb3JjZV9tb25vdG9uaWNxAohYDwAA
AGZvcmdldF9oYWxmdGltZXEDTSwBWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQRjc2lwCl91bnBp
Y2tsZV90eXBlCnEFWAwAAABQeVF0NC5RdENvcmVxBlgKAAAAUUJ5dGVBcnJheXEHQy4B2dDLAAEA
AAAAAwIAAAGsAAAEaQAAAmQAAAMCAAABwgAABGkAAAJkAAAAAAAAcQiFcQmHcQpScQtYDgAAAHdh
cm11cF9zYW1wbGVzcQxK/////3Uu
</properties>
		<properties format="pickle" node_id="4">gAN9cQAoWAkAAABzZWxlY3Rpb25xAVgEAAAAMDoxOXECWAQAAAB1bml0cQNYBwAAAGluZGljZXNx
BFgEAAAAYXhpc3EFWAUAAABzcGFjZXEGWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQdjc2lwCl91
bnBpY2tsZV90eXBlCnEIWAwAAABQeVF0NC5RdENvcmVxCVgKAAAAUUJ5dGVBcnJheXEKQy4B2dDL
AAEAAAAAAwIAAAGuAAAEaQAAAmEAAAMCAAABxAAABGkAAAJhAAAAAAAAcQuFcQyHcQ1ScQ51Lg==
</properties>
		<properties format="pickle" node_id="5">gAN9cQAoWA0AAABtaW5pbXVtX3BoYXNlcQGIWAoAAABzdG9wX2F0dGVucQJHQEkAAAAAAABYBAAA
AGF4aXNxA1gEAAAAdGltZXEEWAQAAABtb2RlcQVYBwAAAGxvd3Bhc3NxBlgNAAAAYW50aXN5bW1l
dHJpY3EHiVgFAAAAb3JkZXJxCE5YCwAAAGZyZXF1ZW5jaWVzcQldcQooSy1LMmVYDAAAAG9ubHlf
c2lnbmFsc3ELiFgTAAAAc2F2ZWRXaWRnZXRHZW9tZXRyeXEMY3NpcApfdW5waWNrbGVfdHlwZQpx
DVgMAAAAUHlRdDQuUXRDb3JlcQ5YCgAAAFFCeXRlQXJyYXlxD0MuAdnQywABAAAAAALkAAABjwAA
BEsAAAKoAAAC5AAAAaUAAARLAAACqAAAAAAAAHEQhXERh3ESUnETdS4=
</properties>
		<properties format="pickle" node_id="6">gAN9cQAoWAYAAABmYWN0b3JxAUsBWAwAAABvbmx5X3NpZ25hbHNxAohYBAAAAGF4aXNxA1gEAAAA
dGltZXEEWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQVjc2lwCl91bnBpY2tsZV90eXBlCnEGWAwA
AABQeVF0NC5RdENvcmVxB1gKAAAAUUJ5dGVBcnJheXEIQy4B2dDLAAEAAAAAAwIAAAG2AAAEaQAA
AloAAAMCAAABzAAABGkAAAJaAAAAAAAAcQmFcQqHcQtScQx1Lg==
</properties>
		<properties format="pickle" node_id="7">gAN9cQAoWAsAAABmcmVxdWVuY2llc3EBRz+5mZmZmZmaSw+GcQJYCQAAAGJsb2Nrc2l6ZXEDS2RY
EwAAAHNhdmVkV2lkZ2V0R2VvbWV0cnlxBGNzaXAKX3VucGlja2xlX3R5cGUKcQVYDAAAAFB5UXQ0
LlF0Q29yZXEGWAoAAABRQnl0ZUFycmF5cQdDLgHZ0MsAAQAAAAADAgAAAcAAAARpAAACUAAAAwIA
AAHWAAAEaQAAAlAAAAAAAABxCIVxCYdxClJxC3Uu
</properties>
		<properties format="pickle" node_id="8">gAN9cQAoWA0AAABwcm9iYWJpbGlzdGljcQGIWA0AAABjbGFzc193ZWlnaHRzcQJ9cQMoSwBHP+AA
AAAAAABLAUc/4AAAAAAAAHVYEAAAAHNocmlua2FnZV9hY3Jvc3NxBEc/seuFHrhR7FgQAAAAc2hy
aW5rYWdlX3dpdGhpbnEFRz+pmZmZmZmaWA8AAABpbml0aWFsaXplX29uY2VxBohYEwAAAHNhdmVk
V2lkZ2V0R2VvbWV0cnlxB2NzaXAKX3VucGlja2xlX3R5cGUKcQhYDAAAAFB5UXQ0LlF0Q29yZXEJ
WAoAAABRQnl0ZUFycmF5cQpDLgHZ0MsAAQAAAAADAgAAAZgAAARpAAACeAAAAwIAAAGuAAAEaQAA
AngAAAAAAABxC4VxDIdxDVJxDlgJAAAAdG9sZXJhbmNlcQ9HPxo24uscQy11Lg==
</properties>
		<properties format="pickle" node_id="9">gAN9cQAoWAsAAABzdHJlYW1fbmFtZXEBWAsAAABNeU91dFN0cmVhbXECWAkAAABzb3VyY2VfaWRx
A1gNAAAAdW5pcXVlc3JjaWQ1NnEEWBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQVjc2lwCl91bnBp
Y2tsZV90eXBlCnEGWAwAAABQeVF0NC5RdENvcmVxB1gKAAAAUUJ5dGVBcnJheXEIQy4B2dDLAAEA
AAAAAwIAAAFyAAAEaQAAAp0AAAMCAAABiAAABGkAAAKdAAAAAAAAcQmFcQqHcQtScQxYDAAAAHNl
bmRfbWFya2Vyc3ENiVgMAAAAbWF4X2J1ZmZlcmVkcQ5LPFgMAAAAb25seV9zaWduYWxzcQ+JWAsA
AABtYXJrZXJfbmFtZXEQWBEAAABPdXRTdHJlYW0tbWFya2Vyc3ERWAkAAABjaHVua19sZW5xEksA
WAUAAABzcmF0ZXETTlgLAAAAc3RyZWFtX3R5cGVxFFgHAAAAQ29udHJvbHEVdS4=
</properties>
		<properties format="pickle" node_id="10">gAN9cQAoWBEAAABjYWxpYnJhdGlvbl9maXJzdHEBiFgPAAAAY2FuX3JlY2FsaWJyYXRlcQKJWAcA
AAB2ZXJib3NlcQOJWA8AAABlbWl0X2NhbGliX2RhdGFxBIhYCgAAAGVuZF9tYXJrZXJxBVgJAAAA
Y2FsaWItZW5kcQZYDQAAAHByaW50X21hcmtlcnNxB4hYEQAAAGVtaXRfcHJlZGljdF9kYXRhcQiI
WBMAAABzYXZlZFdpZGdldEdlb21ldHJ5cQljc2lwCl91bnBpY2tsZV90eXBlCnEKWAwAAABQeVF0
NC5RdENvcmVxC1gKAAAAUUJ5dGVBcnJheXEMQy4B2dDLAAEAAAAAAcIAAAEHAAADKQAAAfEAAAHC
AAABHQAAAykAAAHxAAAAAAAAcQ2FcQ6HcQ9ScRBYDAAAAGJlZ2luX21hcmtlcnERWAsAAABjYWxp
Yi1iZWdpbnESdS4=
</properties>
		<properties format="literal" node_id="11">{'print_compact': True, 'print_time': False, 'print_channel': False, 'only_nonempty': True, 'print_trial': False, 'print_markers': False, 'print_streams': '', 'savedWidgetGeometry': None, 'print_data': False}</properties>
		<properties format="pickle" node_id="12">gAN9cQAoWAcAAAByZWNvdmVycQGIWBQAAAByZXNvbHZlX21pbmltdW1fdGltZXECRz/gAAAAAAAA
WAwAAABtYXhfY2h1bmtsZW5xA0sAWAwAAABub21pbmFsX3JhdGVxBE5YEwAAAHNhdmVkV2lkZ2V0
R2VvbWV0cnlxBWNzaXAKX3VucGlja2xlX3R5cGUKcQZYDAAAAFB5UXQ0LlF0Q29yZXEHWAoAAABR
Qnl0ZUFycmF5cQhDLgHZ0MsAAQAAAAADAgAAAWYAAARpAAACqgAAAwIAAAF8AAAEaQAAAqoAAAAA
AABxCYVxCodxC1JxDFgMAAAAbWF4X2Jsb2NrbGVucQ1NAARYCgAAAG1heF9idWZsZW5xDkseWAUA
AABxdWVyeXEPWAoAAAB0eXBlPSdFRUcncRBYDQAAAGNoYW5uZWxfbmFtZXNxEV1xElgLAAAAZGlh
Z25vc3RpY3NxE4lYDAAAAG1hcmtlcl9xdWVyeXEUWAAAAABxFXUu
</properties>
	</node_properties>
	<patch>{
    "edges": [
        [
            "node2",
            "data",
            "node5",
            "data"
        ],
        [
            "node6",
            "data",
            "node7",
            "data"
        ],
        [
            "node1",
            "data",
            "node8",
            "data"
        ],
        [
            "node8",
            "data",
            "node9",
            "data"
        ],
        [
            "node9",
            "data",
            "node3",
            "data"
        ],
        [
            "node9",
            "data",
            "node10",
            "data"
        ],
        [
            "node9",
            "data",
            "node12",
            "data"
        ],
        [
            "node7",
            "data",
            "node1",
            "data"
        ],
        [
            "node5",
            "data",
            "node6",
            "data"
        ],
        [
            "node4",
            "data",
            "node11",
            "data"
        ],
        [
            "node11",
            "data",
            "node2",
            "data"
        ],
        [
            "node13",
            "data",
            "node4",
            "data"
        ]
    ],
    "nodes": {
        "node1": {
            "class": "Segmentation",
            "module": "neuropype.nodes.formatting",
            "params": {
                "online_epoching": {
                    "customized": true,
                    "type": "EnumPort",
                    "value": "sliding"
                },
                "only_signals": {
                    "customized": true,
                    "type": "BoolPort",
                    "value": false
                },
                "sample_offset": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 0
                },
                "time_bounds": {
                    "customized": true,
                    "type": "Port",
                    "value": [
                        -0.2,
                        0.8
                    ]
                }
            },
            "uuid": "50331979-af8e-4cb7-bf36-6d30041012c5"
        },
        "node10": {
            "class": "LSLOutput",
            "module": "neuropype.nodes.network",
            "params": {
                "chunk_len": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 0
                },
                "marker_name": {
                    "customized": false,
                    "type": "StringPort",
                    "value": "OutStream-markers"
                },
                "max_buffered": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 60
                },
                "only_signals": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "send_markers": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "source_id": {
                    "customized": true,
                    "type": "StringPort",
                    "value": "uniquesrcid56"
                },
                "srate": {
                    "customized": false,
                    "type": "Port",
                    "value": null
                },
                "stream_name": {
                    "customized": true,
                    "type": "StringPort",
                    "value": "MyOutStream"
                },
                "stream_type": {
                    "customized": false,
                    "type": "StringPort",
                    "value": "Control"
                }
            },
            "uuid": "b857b023-36ca-4916-b80a-ca128a03413e"
        },
        "node11": {
            "class": "AccumulateCalibrationData",
            "module": "neuropype.nodes.utilities",
            "params": {
                "begin_marker": {
                    "customized": false,
                    "type": "StringPort",
                    "value": "calib-begin"
                },
                "calibration_first": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "can_recalibrate": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "emit_calib_data": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "emit_predict_data": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "end_marker": {
                    "customized": false,
                    "type": "StringPort",
                    "value": "calib-end"
                },
                "print_markers": {
                    "customized": true,
                    "type": "BoolPort",
                    "value": true
                },
                "verbose": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                }
            },
            "uuid": "b01c7eed-7591-499c-89cf-aac07e7a3450"
        },
        "node12": {
            "class": "PrintToConsole",
            "module": "neuropype.nodes.utilities",
            "params": {
                "only_nonempty": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "print_channel": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "print_compact": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "print_data": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "print_markers": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "print_streams": {
                    "customized": false,
                    "type": "StringPort",
                    "value": ""
                },
                "print_time": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "print_trial": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                }
            },
            "uuid": "8de6fb51-66d0-4a5c-ab82-c73d304ab4bd"
        },
        "node13": {
            "class": "LSLInput",
            "module": "neuropype.nodes.network",
            "params": {
                "channel_names": {
                    "customized": true,
                    "type": "Port",
                    "value": []
                },
                "diagnostics": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "marker_query": {
                    "customized": false,
                    "type": "StringPort",
                    "value": ""
                },
                "max_blocklen": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 1024
                },
                "max_buflen": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 30
                },
                "max_chunklen": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 0
                },
                "nominal_rate": {
                    "customized": false,
                    "type": "Port",
                    "value": null
                },
                "query": {
                    "customized": false,
                    "type": "StringPort",
                    "value": "type='EEG'"
                },
                "recover": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "resolve_minimum_time": {
                    "customized": false,
                    "type": "FloatPort",
                    "value": 0.5
                }
            },
            "uuid": "3f95e709-1948-4da4-97dc-4544acefe109"
        },
        "node2": {
            "class": "AssignTargets",
            "module": "neuropype.nodes.utilities",
            "params": {
                "mapping": {
                    "customized": true,
                    "type": "Port",
                    "value": {
                        "correct": 0,
                        "incorrect": 1
                    }
                }
            },
            "uuid": "1d0d8f16-f44b-4fe7-bb96-ca338d95b4ec"
        },
        "node3": {
            "class": "MeasureLoss",
            "module": "neuropype.nodes.machine_learning",
            "params": {
                "accumulate_offline": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "loss_metric": {
                    "customized": false,
                    "type": "EnumPort",
                    "value": "MCR"
                }
            },
            "uuid": "bbb7b239-ed20-413c-bfa0-195620abd106"
        },
        "node4": {
            "class": "DejitterTimestamps",
            "module": "neuropype.nodes.utilities",
            "params": {
                "force_monotonic": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "forget_halftime": {
                    "customized": true,
                    "type": "FloatPort",
                    "value": 300
                },
                "max_updaterate": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 500
                },
                "warmup_samples": {
                    "customized": false,
                    "type": "IntPort",
                    "value": -1
                }
            },
            "uuid": "5c0ab1b3-c04b-42f0-996b-cc2c4126580c"
        },
        "node5": {
            "class": "SelectRange",
            "module": "neuropype.nodes.general",
            "params": {
                "axis": {
                    "customized": true,
                    "type": "EnumPort",
                    "value": "space"
                },
                "selection": {
                    "customized": true,
                    "type": "Port",
                    "value": "0:19"
                },
                "unit": {
                    "customized": false,
                    "type": "EnumPort",
                    "value": "indices"
                }
            },
            "uuid": "1580f647-ae55-49ed-ad91-aa094da954f4"
        },
        "node6": {
            "class": "FIRFilter",
            "module": "neuropype.nodes.filters",
            "params": {
                "antisymmetric": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": false
                },
                "axis": {
                    "customized": false,
                    "type": "EnumPort",
                    "value": "time"
                },
                "frequencies": {
                    "customized": true,
                    "type": "ListPort",
                    "value": [
                        45,
                        50
                    ]
                },
                "minimum_phase": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "mode": {
                    "customized": true,
                    "type": "EnumPort",
                    "value": "lowpass"
                },
                "only_signals": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "order": {
                    "customized": false,
                    "type": "IntPort",
                    "value": null
                },
                "stop_atten": {
                    "customized": true,
                    "type": "FloatPort",
                    "value": 50.0
                }
            },
            "uuid": "953f7591-580e-43e8-b11e-b4bd34cff760"
        },
        "node7": {
            "class": "Decimate",
            "module": "neuropype.nodes.filters",
            "params": {
                "axis": {
                    "customized": false,
                    "type": "EnumPort",
                    "value": "time"
                },
                "factor": {
                    "customized": true,
                    "type": "IntPort",
                    "value": 1
                },
                "only_signals": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                }
            },
            "uuid": "1c20d62e-3437-4589-9a68-52a1fe259fa0"
        },
        "node8": {
            "class": "SpectralSelection",
            "module": "neuropype.nodes.spectral",
            "params": {
                "blocksize": {
                    "customized": false,
                    "type": "IntPort",
                    "value": 100
                },
                "frequencies": {
                    "customized": true,
                    "type": "Port",
                    "value": [
                        0.1,
                        15
                    ]
                }
            },
            "uuid": "68224b8d-2a41-45d1-9917-4714b23c4fe4"
        },
        "node9": {
            "class": "HierarchicalDiscriminantComponentAnalysis",
            "module": "neuropype.nodes.machine_learning",
            "params": {
                "class_weights": {
                    "customized": true,
                    "type": "Port",
                    "value": {
                        "0": 0.5,
                        "1": 0.5
                    }
                },
                "initialize_once": {
                    "customized": true,
                    "type": "BoolPort",
                    "value": true
                },
                "probabilistic": {
                    "customized": false,
                    "type": "BoolPort",
                    "value": true
                },
                "shrinkage_across": {
                    "customized": true,
                    "type": "Port",
                    "value": 0.07
                },
                "shrinkage_within": {
                    "customized": true,
                    "type": "Port",
                    "value": 0.05
                },
                "tolerance": {
                    "customized": false,
                    "type": "FloatPort",
                    "value": 0.0001
                }
            },
            "uuid": "e4df70a8-69a8-4356-8500-008443d8788f"
        }
    },
    "version": 1.1
}</patch>
</scheme>
